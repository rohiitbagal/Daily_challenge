class Solution {
  public:
    int maxLen(vector<int>& arr, int n) {
        int maxLength = 0;  // This should be used to store the maximum length of subarray with sum 0

        // Iterate over each possible starting point of the subarray
        for (int i = 0; i < n; i++) {
            int sum = 0;  // Initialize the sum for the current subarray starting at index i

            // Check every subarray starting from index i
            for (int j = i; j < n; j++) {
                sum += arr[j];  // Add the current element to the sum

                // If the sum becomes 0, check the length of the subarray
                if (sum == 0) {
                    int currentLength = j - i + 1;  // Length of the subarray
                    maxLength = max(maxLength, currentLength);  // Update maxLength if this subarray is longer
                }
            }
        }

        return maxLength;  // Return the length of the largest subarray with sum 0
    }
};
